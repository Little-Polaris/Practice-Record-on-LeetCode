#include <iostream>
#include <vector>
#include <algorithm>
#include <time.h>
#include <windows.h>

using namespace std;

class Solution {
public:
    int bin_sea(vector<int> v, int left, int right, int num)
    {
        while (left < right)
        {
            bool l = v[left] < num;
            bool r = v[right] >= num;
            if (l && r)
            {
                left++;
                right--;
            }
            else if (l)
            {
                left++;
            }
            else if (r)
            {
                right--;
            }
        }
        return left;
    }
    int threeSumClosest(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end());
        int min = 1e9;
        for (int i = 0; i < nums.size() - 2; i++)
        {
            /*for (int j = nums.size() - 1; j > i + 1; j--)
            {
                int temp = target - nums[i] - nums[j];
                int pos = bin_sea(nums, i + 1, j - 1, temp);
                int t_min = target - nums[i] - nums[j] - nums[pos];
                min = abs(min) < abs(t_min) ? min : t_min;
                if (!min)
                {
                    return target;
                }
            }*/
            int j = i + 1;
            int k = nums.size() - 1;
            while (j < k)
            {
                int temp = nums[i] + nums[j] + nums[k];
                int diff = target - temp;
                if (abs(diff) < abs(min))
                {
                    min = diff;
                }
                if (diff < 0)
                {
                    k--;
                }
                else if (diff > 0)
                {
                    j++;
                }
                else
                {
                    return target;
                }
            }
        }
        return target - min;
    }
};

int main()
{
    vector<int> v = { -1,2,1,-4 };
    //v = {88, 609, -765, -709, 191, -963, 412, -231, 652, -236, -692, -874, 322, -993, -202, -89, -133, 764, -241, -224, -906, -775, -667, 433, 726, 4, -208, -595, 814, -561, 103, -827, -948, -476, 0, -14, 974, -475, 488, 397, -456, 87, 225, 6, -804, 242, 503, 55, 90, 487, -630, 335, 403, -499, 396, 229, -160, 858, -702, -226, -615, 3, 882, 518, 28, -676, 990, -252, -142, -382, -663, -47, -71, -567, -728, 761, 59, -945, 653, 572, 353, -200, 172, 595, -325, -987, -858, 114, -506, 190, -107, -388, 698, -219, 12, -510, -374, -181, -161, -35, -890, -330, 193, -110, -817, 495, -803, -323, -935, -136, 730, -860, -767, 416, -256, 798, 179, 682, -196, 10, -515, 76, 909, -301, -530, 945, 248, -570, 597, -869, -85, -665, -884, -887, 900, 45, -659, -138, 519, 565, -623, -60, 995, -194, 157, 958, 173, 536, -91, 380, 306, 690, -534, 77, 571, 902, -316, 40, -617, -899, -29, -318, -267, -539, 443, 375, -843, 249, 563, -757, 473, 117, 331, 342, 979, -129, -503, -326, 694, 975, 732, 98, -59, -115, -212, -286, -223, -33, -652, -405, 169, 957, -375, -238, 745, -816, 901, -926, 559, 719, -1, -419, 511, -684, -524, 369, -17, 377, 96, 914, 819, 665, 392, 465, -750, 676, 152, 298, -265, 851, 596, 219, 785, -622, -794, -225, -559, -468, -610, 637, -439, -516, -189, 505, -335, 543, 769, -989, 700, -641, 387, 406, -6, -602, 922, 710, -351, -90, 394, -75, 754, 444, -309, -124, -755, 697, -491, 336, 319, -769, -533, -313, 9, 196, 606, 72, -607, -84, 362, -337, -766, -637, 643, 772, -54, 746, 560, 66, -140, -722, -790, -172, -940, -729, -449, -36, 231, 549, 793, 735, 490, -986, 702, 339, -44, -780, 314, 101, 348, 982, 577, 238, 285, 567, -41, 268, 540, 37, 269, 413, -511, -520}; 
    v = {4, 0, 5, -5, 3, 3, 0, -4, -5};//-5 -5 -4 0 0 3 3 4 5 
    cout << v.size() << endl;
    clock_t start = clock();
    int answer = Solution().threeSumClosest(v, -2);
    clock_t end = clock();
    cout << answer << endl;
    cout << end - start << endl;
    return 0;
}